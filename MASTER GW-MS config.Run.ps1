#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 48538f5c-114d-43d3-b33d-0432f2e082e3
# Source File: D:\GIT-REPOSITORY\DTEK_SCOM_GATEWAY_CONSOLE\DTEK_SCOM_GATEWAY_CONSOLE\MASTER GW-MS config.psf
#------------------------------------------------------------------------

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2018 v5.5.152
     Generated on:       13/06/2018 14:53
     Generated by:       danie
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2018
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

function OnApplicationLoad {
	return $true #return true for success or false for failure
}

function OnApplicationExit {
	$script:ExitCode = 0 #Set the exit code for the Packager
}

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-MASTER_GW-MS_config_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Define SAPIEN Types
	#----------------------------------------------
	try{
		[ProgressBarOverlay] | Out-Null
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms', 'System.Drawing') -TypeDefinition  @" 
		using System;
		using System.Windows.Forms;
		using System.Drawing;
        namespace SAPIENTypes
        {
		    public class ProgressBarOverlay : System.Windows.Forms.ProgressBar
	        {
                public ProgressBarOverlay() : base() { SetStyle(ControlStyles.OptimizedDoubleBuffer | ControlStyles.AllPaintingInWmPaint, true); }
	            protected override void WndProc(ref Message m)
	            { 
	                base.WndProc(ref m);
	                if (m.Msg == 0x000F)// WM_PAINT
	                {
	                    if (Style != System.Windows.Forms.ProgressBarStyle.Marquee || !string.IsNullOrEmpty(this.Text))
                        {
                            using (Graphics g = this.CreateGraphics())
                            {
                                using (StringFormat stringFormat = new StringFormat(StringFormatFlags.NoWrap))
                                {
                                    stringFormat.Alignment = StringAlignment.Center;
                                    stringFormat.LineAlignment = StringAlignment.Center;
                                    if (!string.IsNullOrEmpty(this.Text))
                                        g.DrawString(this.Text, this.Font, Brushes.Black, this.ClientRectangle, stringFormat);
                                    else
                                    {
                                        int percent = (int)(((double)Value / (double)Maximum) * 100);
                                        g.DrawString(percent.ToString() + "%", this.Font, Brushes.Black, this.ClientRectangle, stringFormat);
                                    }
                                }
                            }
                        }
	                }
	            }
              
                public string TextOverlay
                {
                    get
                    {
                        return base.Text;
                    }
                    set
                    {
                        base.Text = value;
                        Invalidate();
                    }
                }
	        }
        }
"@ -IgnoreWarnings | Out-Null
	}
	#endregion Define SAPIEN Types

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formSELECT = New-Object 'System.Windows.Forms.Form'
	$label7 = New-Object 'System.Windows.Forms.Label'
	$textbox10 = New-Object 'System.Windows.Forms.TextBox'
	$button1 = New-Object 'System.Windows.Forms.Button'
	$buttonSHOWAGENTS = New-Object 'System.Windows.Forms.Button'
	$buttonSHOWGWFAILOVER = New-Object 'System.Windows.Forms.Button'
	$labelDataCenter3 = New-Object 'System.Windows.Forms.Label'
	$listbox3 = New-Object 'System.Windows.Forms.ListBox'
	$progressbaroverlay1 = New-Object 'SAPIENTypes.ProgressBarOverlay'
	$SETALLB = New-Object 'System.Windows.Forms.Button'
	$SETALLA = New-Object 'System.Windows.Forms.Button'
	$labelAGENTS = New-Object 'System.Windows.Forms.Label'
	$checkedlistbox6 = New-Object 'System.Windows.Forms.CheckedListBox'
	$checkedlistbox5 = New-Object 'System.Windows.Forms.CheckedListBox'
	$buttonSELECT4 = New-Object 'System.Windows.Forms.Button'
	$buttonSELECT3 = New-Object 'System.Windows.Forms.Button'
	$buttonSELECT2 = New-Object 'System.Windows.Forms.Button'
	$buttonSELECT1 = New-Object 'System.Windows.Forms.Button'
	$textbox9 = New-Object 'System.Windows.Forms.TextBox'
	$textbox8 = New-Object 'System.Windows.Forms.TextBox'
	$label5 = New-Object 'System.Windows.Forms.Label'
	$label4 = New-Object 'System.Windows.Forms.Label'
	$label3 = New-Object 'System.Windows.Forms.Label'
	$label2 = New-Object 'System.Windows.Forms.Label'
	$label1 = New-Object 'System.Windows.Forms.Label'
	$labelSELECTED = New-Object 'System.Windows.Forms.Label'
	$labelGATEWAYAndAGENTSTATU = New-Object 'System.Windows.Forms.Label'
	$STATUS = New-Object 'System.Windows.Forms.Panel'
	$textbox7 = New-Object 'System.Windows.Forms.TextBox'
	$textbox6 = New-Object 'System.Windows.Forms.TextBox'
	$textbox5 = New-Object 'System.Windows.Forms.TextBox'
	$textbox4 = New-Object 'System.Windows.Forms.TextBox'
	$textbox3 = New-Object 'System.Windows.Forms.TextBox'
	$textbox2 = New-Object 'System.Windows.Forms.TextBox'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$buttonEXITCONSOLE = New-Object 'System.Windows.Forms.Button'
	$buttonSTARTGATEWAYSCAN = New-Object 'System.Windows.Forms.Button'
	$labelSCRIPTOUTPUT = New-Object 'System.Windows.Forms.Label'
	$buttonset4 = New-Object 'System.Windows.Forms.Button'
	$checkedlistbox4 = New-Object 'System.Windows.Forms.CheckedListBox'
	$buttonSET2 = New-Object 'System.Windows.Forms.Button'
	$checkedlistbox3 = New-Object 'System.Windows.Forms.CheckedListBox'
	$labelSETAGENTFAILOVER = New-Object 'System.Windows.Forms.Label'
	$buttonCHECKAGENTFAILOVER = New-Object 'System.Windows.Forms.Button'
	$SHOWAGENTSB = New-Object 'System.Windows.Forms.Button'
	$DCBGWFailover = New-Object 'System.Windows.Forms.Button'
	$labelSETGWFAILOVER = New-Object 'System.Windows.Forms.Label'
	$SHOWAGENTSFAILOVER = New-Object 'System.Windows.Forms.Button'
	$labelDTEKSCOMGATEWAYMANAG = New-Object 'System.Windows.Forms.Label'
	$buttonSET3 = New-Object 'System.Windows.Forms.Button'
	$checkedlistbox2 = New-Object 'System.Windows.Forms.CheckedListBox'
	$checkedlistbox1 = New-Object 'System.Windows.Forms.CheckedListBox'
	$buttonSET1 = New-Object 'System.Windows.Forms.Button'
	$SHOWAGENTSA = New-Object 'System.Windows.Forms.Button'
	$DCAGWFailover = New-Object 'System.Windows.Forms.Button'
	$labelDataCenter2 = New-Object 'System.Windows.Forms.Label'
	$labelDatacenter1 = New-Object 'System.Windows.Forms.Label'
	$listbox2 = New-Object 'System.Windows.Forms.ListBox'
	$listbox1 = New-Object 'System.Windows.Forms.ListBox'
	$picturebox1 = New-Object 'System.Windows.Forms.PictureBox'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	
	function OnApplicationLoad {
		return $true #return true for success or false for failure
	}
	
	
	
	#region Control Helper Functions
	function Update-ListBox
	{
	<#
		.SYNOPSIS
			This functions helps you load items into a ListBox or CheckedListBox.
		
		.DESCRIPTION
			Use this function to dynamically load items into the ListBox control.
		
		.PARAMETER ListBox
			The ListBox control you want to add items to.
		
		.PARAMETER Items
			The object or objects you wish to load into the ListBox's Items collection.
		
		.PARAMETER DisplayMember
			Indicates the property to display for the items in this control.
		
		.PARAMETER Append
			Adds the item(s) to the ListBox without clearing the Items collection.
		
		.EXAMPLE
			Update-ListBox $ListBox1 "Red", "White", "Blue"
		
		.EXAMPLE
			Update-ListBox $listBox1 "Red" -Append
			Update-ListBox $listBox1 "White" -Append
			Update-ListBox $listBox1 "Blue" -Append
		
		.EXAMPLE
			Update-ListBox $listBox1 (Get-Process) "ProcessName"
		
		.NOTES
			Additional information about the function.
	#>
		
		param
		(
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			[System.Windows.Forms.ListBox]
			$ListBox,
			[Parameter(Mandatory = $true)]
			[ValidateNotNull()]
			$Items,
			[Parameter(Mandatory = $false)]
			[string]
			$DisplayMember,
			[switch]
			$Append
		)
		
		if (-not $Append)
		{
			$listBox.Items.Clear()
		}
		
		if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [System.Collections.IEnumerable])
		{
			$listBox.BeginUpdate()
			foreach ($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)
		}
		
		$listBox.DisplayMember = $DisplayMember
	}
	
	function Load-ComboBox 
	{
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ComboBox]$ComboBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$ComboBox.Items.Clear()	
		}
		
		if($Items -is [Object[]])
		{
			$ComboBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$ComboBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$ComboBox.Items.Add($obj)	
			}
			$ComboBox.EndUpdate()
		}
		else
		{
			$ComboBox.Items.Add($Items)	
		}
	
		$ComboBox.DisplayMember = $DisplayMember	
	}
	
	function Load-ListBox 
	{
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			[System.Windows.Forms.ListBox]$ListBox,
			[ValidateNotNull()]
			[Parameter(Mandatory=$true)]
			$Items,
		    [Parameter(Mandatory=$false)]
			[string]$DisplayMember,
			[switch]$Append
		)
		
		if(-not $Append)
		{
			$listBox.Items.Clear()	
		}
		
		if($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
		{
			$listBox.Items.AddRange($Items)
		}
		elseif ($Items -is [Array])
		{
			$listBox.BeginUpdate()
			foreach($obj in $Items)
			{
				$listBox.Items.Add($obj)
			}
			$listBox.EndUpdate()
		}
		else
		{
			$listBox.Items.Add($Items)	
		}
	
		$listBox.DisplayMember = $DisplayMember	
	}
	
	function OnApplicationExit {
		$script:ExitCode = 0 #Set the exit code for the Packager
	}
	
	$formSELECT_Load={
		
	#######################################################################
	########################  START  ######################################
	#######################################################################
		
	#Set-StrictMode -Version 1.0
		
	############# INIT ENVIROMENT ##########################
	$buttonSET2.enabled=$false
	$SHOWAGENTSB.enabled=$false
	$buttonCHECKAGENTFAILOVER.enabled=$false
	$buttonSET3.enabled=$false
	$buttonset4.enabled=$false
	$SHOWAGENTSFAILOVER.enabled=$false
	$buttonSET1.enabled=$false
	$SHOWAGENTSA.enabled=$false
	$DCAGWFailover.enabled=$false	
	$DCBGWFailover.enabled=$false
	$buttonSELECT1.Enabled=$false
	$buttonSELECT2.Enabled=$false	
	$buttonSELECT3.Enabled=$false
	$buttonSELECT4.Enabled=$false
	$SETALLA.Enabled=$false
	$SETALLB.Enabled=$false	
		
	$progressbaroverlay1.visible = $false		
		
	$Global:NewLine = "`r`n"
	
	$Global:SET1Click=0
		
	clear
	
	######### must add this for system assemblies ##############
	Add-Type -AssemblyName System.Data
	######### Connect to SCOM ##################################
	
	
	## AUTOSTART-END ##	
	}	
	
	$buttonSTARTGATEWAYSCAN_Click={
	$formselect.Refresh
	$buttonSTARTGATEWAYSCAN.backcolor = "red"
		
	$progressbaroverlay1.visible = $true
	$progressbaroverlay1.Value=0
		
		####### INIT Enviroment ####### 	
		
	$textbox1.Text=""
	$listbox1.Text=""
	$listbox2.Text=""
	[string]$LogMessages=""
	$LogMessages += '--CONNECTING to MG' 
	$textbox1.Text = $LogMessages		
	
	try{
		
	$ManagementServers=""
		
	$MS1 = "DTEKSC2012R2-m1.dtek.com"
	$MS2 = "DTEKSC2012R2-m2.dtek.com"
	$MS3 = "DTEKSC2012R2-m3.dtek.com"
		
	Import-Module OperationsManager
	New-SCOMManagementGroupConnection –ComputerName $MS1
	$LogMessages +="---connected to $MS1"	
	}
	
	catch{
	$LogMessages += "--- ERROR Unable to Connect to server $MS1 connecting to $MS2 "
	
	Try{	
	Import-Module OperationsManager
	New-SCOMManagementGroupConnection –ComputerName $MS2
	$LogMessages +="---connected to $MS2"		
		}
	catch {
	$LogMessages += "--- ERROR Unable to Connect to server $MS2 connecting to $MS3 "		
	try{
	Import-Module OperationsManager
	New-SCOMManagementGroupConnection –ComputerName $MS3
	$LogMessages +="---connected to $MS3"
			}
			catch{
	$LogMessages += "--- ERROR Unable to Connect to any SCOM management server "		
			}
			}           
	}	
	
	$textbox1.Text = $LogMessages		
	
	######## GET MANAGEMENT SERVERS and GATEWAYS ##############
	
	Try{
	$ManagementServers = Get-SCOMManagementServer | where {$_.IsGateway -eq $false} | select name , computername
	
	$GWS=$GWS.name		
	$LogMessages += " ---retrieved Management server and Gateway information successfully "	 
	}
	catch {
	$LogMessages += " ---ERROR in retrieving Management and Gateway server information "		
	}
	
	$GW=@()
	
	$GW = Get-SCOMManagementServer | where {$_.IsGateway -eq $true} | select computername , name
	
	###### LOAD SELECTION and LISTBOXES ########
		
	foreach ($GWDN in $GW){
	Start-Sleep -Milliseconds 3000		
	$progressbaroverlay1.Value +=10
	if ($GWDN.computername -like "???2*"){
	
	Load-ListBox $listbox2  $gwDN.name 	-append	
	Load-ListBox $checkedlistbox3  $gwDN.name 	-append				
	}
	
	if ($GWDN.computername -like "???5*"){
	Load-ListBox $listbox1  $gwDN.name 	-append	
	Load-ListBox $checkedlistbox4  $gwDN.name 	-append				
	}
	
	}
		
	foreach ($MS in $ManagementServers){
			
		If ($MS.computername -Notlike 'PDC2SCM04?' -and $MS.computername -ne 'PDC2SCM018' -and $MS.computername -ne 'PDC2SCM019'-and $MS.computername -ne 'PDC2SCM010' ){
		Load-ListBox $checkedlistbox1  $MS.computername 	-append		
		Load-ListBox $checkedlistbox2  $MS.computername 	-append	
			}		
		}
			
	$buttonSTARTGATEWAYSCAN.backcolor = "lightgreen"
	$textbox1.Text = $LogMessages	
		
	$SHOWAGENTSB.enabled=$true
	$buttonCHECKAGENTFAILOVER.enabled=$true
	$SHOWAGENTSFAILOVER.enabled=$true
	$SHOWAGENTSA.enabled=$true
	$DCAGWFailover.enabled=$true
	$DCBGWFailover.enabled=$true
			
	$SHOWAGENTSB.BackColor="lightblue"
	$buttonCHECKAGENTFAILOVER.BackColor="lightblue"
	$SHOWAGENTSFAILOVER.BackColor="lightblue"
	$SHOWAGENTSA.BackColor="lightblue"
	$DCAGWFailover.BackColor="lightblue"		
	$DCBGWFailover.BackColor="lightblue"
	
	$progressbaroverlay1.Value =100
			
	}
		
	###################################################################################	
	################################### END MAIN SCRIPT ###############################
	###################################################################################
		
	#endregion
	
	$listbox2_SelectedIndexChanged={
		$textbox2.Text = $listbox2.SelectedItem
		$Global:GWDCaSELECT=$textbox2.Text
		$textbox2.backcolor="Lightgreen"
	}
	
	$listbox1_SelectedIndexChanged={
		$textbox3.Text = $listbox1.SelectedItem
		$Global:GWDCbSELECT=$textbox3.Text
		$textbox3.backcolor="Lightgreen"	
	}
	
	################### GTE DCA FAILOVER BUTTON #######################
	$DCAGWFailover_Click={
		
	$progressbaroverlay1.visible = $false
	$LogMessages += " Getting Getaway failover Servers "
		
		
	
	if ($Global:GWDCaSELECT){
	$STATUS.backcolor="LightGreen"		
	$DCAGWFailover.backcolor = "red"
	$textbox8.Text = "Getting Failover MS for --  $Global:GWDCaSELECT"	+ $global:NewLine
	$GWA=Get-SCOMGatewayManagementServer | where {$_.name -eq $Global:GWDCaSELECT} 
	$GWA | foreach-object { 
	
	$Primary=$_.getPrimaryManagementServer() | select Name 
	
	If (!$Primary){
	$textbox8.ForeColor="RED"
	$textbox8.AppendText("ERROR -- NO PRIMARY FAILOVER SERVER" + $global:NewLine + $global:NewLine )			
	$STATUS.backcolor="red"	
				
			}Else{
	$textbox8.AppendText("Primary Server = $Primary" + $global:NewLine + $global:NewLine)
			}				
	$failover=$_.getFailoverManagementServers() | select Name
				
	If (!$failover){
	$textbox8.ForeColor="RED"
	$textbox8.AppendText("ERROR -- NO SECONDARY FAILOVER SERVER" + $global:NewLine)			
	$STATUS.backcolor="red"
				
			}else{
	$textbox8.AppendText("Failover Server = $failover" + $global:NewLine)	
			}	
							
	}
	$textbox1.Text = $LogMessages
	$buttonSELECT1.Enabled=$true
	$buttonSELECT1.BackColor="lightblue"		
	$DCAGWFailover.backcolor = "LightGreen"	
		}
	
	else{	
	$textbox8.Text =	"ERROR NO GATEWAY SELECTED "				
	$textbox1.Text = $LogMessages
	$DCAGWFailover.backcolor = "LightGreen"
		}	
	
	}
	
	################### GTE DCB FAILOVER BUTTON #######################
	
	$DCBGWFailover_Click={
	$progressbaroverlay1.visible = $false
		
	$STATUS.backcolor="LightGreen"	
	$LogMessages += " Getting Getaway failover Servers"		
		
	if ($Global:GWDCbSELECT){
	
	$DCBGWFailover.backcolor = "red"
	$textbox9.Text = "Getting Failover MS for --  $Global:GWDCbSELECT "	+ $global:NewLine
	$GWA=Get-SCOMGatewayManagementServer | where {$_.name -eq $Global:GWDCbSELECT} 
	$GWA | foreach-object { 
	
	$Primary=$_.getPrimaryManagementServer() | select Name 
	
	If (!$Primary){
	$textbox9.ForeColor="RED"
	$textbox9.AppendText("ERROR -- NO PRIMARY FAILOVER SERVER "	+ $global:NewLine + $global:NewLine )		
	$STATUS.backcolor="red"				
			}Else{
	$textbox9.appendText("Primary Server = $Primary" + $global:NewLine + $global:NewLine)
			}				
	$failover=$_.getFailoverManagementServers() | select Name
				
	If (!$failover){
	$textbox9.ForeColor="RED"
	$textbox9.appendText("ERROR -- NO SECONDARY FAILOVER SERVER " + $global:NewLine)		
	$STATUS.backcolor="red"				
			}else{
	$textbox9.appendText("Failover Server = $failover"	+ $global:NewLine)
			}	
	}
	$buttonSELECT3.Enabled=$true
	$buttonSELECT3.BackColor="lightblue"
	$textbox1.Text = $LogMessages		
	$DCBGWFailover.backcolor = "LightGreen"	
					
			
		}
		Else{	
	$textbox9.Text =	"ERROR NO GATEWAY SELECTED "				
	$textbox1.Text = $LogMessages
	$DCBGWFailover.backcolor = "LightGreen"
		}
			
	}
	
	$buttonEXITCONSOLE_Click={$formSELECT.Close()}
	
	$checkedlistbox3_SelectedIndexChanged={}
	
	$checkedlistbox1_SelectedIndexChanged={}
	
	#### SELECT 1 #######
	$buttonSELECT1_Click={
		
		$Global:checked1=$checkedlistbox1.Items | ?{$checkedlistbox1.CheckedItems -contains $_}
		
		#### add a two only filter ####
		If ($checkedlistbox1.CheckedItems.Count -le 1 -OR  $checkedlistbox1.CheckedItems.Count -gt 2){
			$buttonSELECT1.BackColor="RED"
			$textbox8.ForeColor="RED"
			$buttonSET1.Enabled=$false
			$textbox8.Text="2 SELECTIONS REQUIRED" + $global:NewLine
			$textbox8.AppendText("AMEND SELECTION TO CONTINUE")
		}
		else{
		$Global:PRIM1=$checkedlistbox1.checkedItems[0]
		$Global:FAIL1=$checkedlistbox1.checkedItems[1]
		$buttonSELECT1.backColor="lightblue"	
		$textbox4.Text = $Global:checked1
		$buttonSET1.Enabled=$true
		$buttonSET1.BackColor="lightblue"
		$textbox4.backcolor = "LightGreen"
		$textbox8.foreColor="lime"	
		$textbox8.Text=$Global:PRIM1 + $global:NewLine + $Global:FAIL1 + $global:NewLine + "SELECTED SUCCESSFULLY"		
		}
	}
	#### SELECT 2 #######
	$buttonSELECT2_Click={
		$checked2=$checkedlistbox3.Items | ?{$checkedlistbox3.CheckedItems -contains $_}
		$textbox5.Text = $checked2
		$buttonSET2.Enabled=$true
		$buttonSET2.BackColor="lightblue"
		$textbox5.backcolor = "LightGreen"
		}
	
	#### SELECT 3 #######
	$buttonSELECT3_Click={
		$checked3=$checkedlistbox2.Items | ?{$checkedlistbox2.CheckedItems -contains $_}
	
		$Global:PRIM2=$checkedlistbox2.Items[0]
		$Global:FAIL2=$checkedlistbox2.Items[1]
		
		#### add a two only filter ####
		If ($checkedlistbox2.CheckedItems.Count -le 1 -OR  $checkedlistbox2.CheckedItems.Count -gt 2){
			$buttonSELECT3.BackColor="RED"
			$textbox9.ForeColor="RED"
			$buttonSET3.Enabled=$false
			$textbox9.Text="2 SELECTIONS REQUIRED" + $global:NewLine
			$textbox9.AppendText("AMEND SELECTION TO CONTINUE")
		}
		else{
		$Global:PRIM2=$checkedlistbox2.checkedItems[0]
		$Global:FAIL2=$checkedlistbox2.checkedItems[1]
		$buttonSELECT3.backColor="lightblue"	
		$textbox6.Text = $checked3
		$buttonSET3.Enabled=$true
		$buttonSET3.BackColor="lightblue"
		$textbox6.backcolor = "LightGreen"
		$textbox9.foreColor="lime"	
		$textbox9.Text=$Global:PRIM2 + $global:NewLine + $Global:FAIL2 + $global:NewLine + "SELECTED SUCCESSFULLY"		
		}
		}
		
	#### SELECT 4 #######
	$buttonSELECT4_Click={
		$checked4=$checkedlistbox4.Items | ?{$checkedlistbox4.CheckedItems -contains $_}
		$textbox7.Text = $checked4
		$buttonSET4.Enabled=$true
		$buttonSET4.BackColor="lightblue"
		$textbox7.backcolor = "LightGreen"
		}
		
	#### SET 1 #######
	$buttonSET1_Click={	
	$Global:SET1Click++
	$textbox8.ForeColor="LIME"
	$textbox8.Text = "YOU HAVE SELECTED PRIMARY and FAILOVER for $Global:GWDCaSELECT" + $Global:NewLine
	$textbox8.AppendText("PRIMARY To $Global:PRIM1" + $Global:NewLine)
	$textbox8.AppendText("FAILOVER To $Global:FAIL1" + $Global:NewLine + $Global:NewLine) 
	
	
	
	$textbox8.AppendText("!!!ARE YOU SURE!!!"  + $global:NewLine + $Global:NewLine)
	$textbox8.AppendText("PRESS SET AGAIN to COMMIT"  + $global:NewLine + $Global:NewLine)	
	$textbox8.AppendText("-----------------------------------------------"  + $global:NewLine)
		
	If ($Global:SET1Click -eq 2){
	$textbox8.AppendText("SETTING PRIMARY AND FAILOVER SERVERS for $Global:GWDCaSELECT"  + $global:NewLine + $Global:NewLine)	
	$textbox8.AppendText("-----------------------------------------------"  + $global:NewLine)	
			
	#### SET PRIMARY and FAILOVER ####	
	 	
	<#
	Try{
	$primaryMS = Get-SCOMManagementServer | where {$_.Name –eq $Global:PRIM1} 
	$failoverMS = Get-SCOMManagementServer | where {$_.Name –eq $Global:FAIL1} 
	$gatewayMS = Get-SCOMManagementServer | where {$_.Name –eq $Global:GWDCaSELECT} 
	Set-SCOMParentManagementServer -GatewayServer: $gatewayMS -PrimaryServer: $primaryMS 
	Set-SCOMParentManagementServer -GatewayServer: $gatewayMS -FailoverServer: $failoverMS		
			}
			Catch{###### INSERT CATCH CODE in Here ######}
	#>
			
	$textbox8.AppendText("SET PRIMARY AND FAILOVER SERVERS for $Global:GWDCaSELECT"  + $global:NewLine + $Global:NewLine)	
		
	$textbox8.AppendText("-----------------------------------------------"  + $global:NewLine + $global:NewLine)
	### VERIFY PRIM and FAILOVER ####
	$textbox8.AppendText("VERIFYING PRIMARY AND FAILOVER SERVERS for $Global:GWDCaSELECT"  + $global:NewLine + $Global:NewLine)			
	$textbox8.AppendText("-----------------------------------------------"  + $global:NewLine)	
	
	
	$GWA=Get-SCOMGatewayManagementServer | where {$_.name -eq $Global:GWDCaSELECT} 
	$GWA | foreach-object { 
	$Primary=$_.getPrimaryManagementServer() | select Name 			
	$failover=$_.getFailoverManagementServers() | select Name	
		
	### check that these are correct ###
	If ( $Primary -eq $Global:PRIM1 -and $failover -eq $Global:FAIL1){
				
	$textbox8.AppendText("SUCCESSFULLY VERIFIED PRIMARY AND FAILOVER SERVERS for $Global:GWDCaSELECT"  + $global:NewLine + $Global:NewLine)	
	
	$textbox8.AppendText("PRIMARY:---" + $Primary + $global:NewLine)
	$textbox8.AppendText("FAILOVER:---" + $failover+ $global:NewLine)				
			}			
	else {
	$textbox8.ForeColor="RED"			
	$textbox8.AppendText("VERIFICATION FAILED FOR PRIMARY AND FAILOVER SERVERS for $Global:GWDCaSELECT"  + $global:NewLine + $Global:NewLine)
	
	$textbox8.AppendText("PRIMARY:---" + $Primary + $global:NewLine)
	$textbox8.AppendText("FAILOVER:---" + $failover+ $global:NewLine)				
					
			}	
	}
							
	}	
	
	### Set status and reset buttons ###				
	}
	
	#### SET 2 #######
	$buttonSET2_Click={}
	
	#### SET 3 #######
	$buttonSET3_Click={
		
	$Global:SET3Click++
	$textbox9.ForeColor="LIME"
	$textbox9.Text = "YOU HAVE SELECTED PRIMARY and FAILOVER for $Global:GWDCbSELECT" + $Global:NewLine
	$textbox9.AppendText("PRIMARY To $Global:PRIM2" + $Global:NewLine)
	$textbox9.AppendText("FAILOVER To $Global:FAIL2" + $Global:NewLine + $Global:NewLine) 
	
	$textbox9.AppendText("!!!ARE YOU SURE!!!"  + $global:NewLine + $Global:NewLine)
	$textbox9.AppendText("PRESS SET AGAIN to COMMIT"  + $global:NewLine + $Global:NewLine)	
	$textbox9.AppendText("-----------------------------------------------"  + $global:NewLine)
		
	If ($Global:SET3Click -eq 2){
	$textbox9.AppendText("SETTING PRIMARY AND FAILOVER SERVERS for $Global:GWDCbSELECT"  + $global:NewLine + $Global:NewLine)	
	$textbox9.AppendText("-----------------------------------------------"  + $global:NewLine)	
			
	#### SET PRIMARY and FAILOVER ####	
	 	
	<#
	Try{
	$primaryMS1 = Get-SCOMManagementServer | where {$_.Name –eq $Global:PRIM2} 
	$failoverMS1 = Get-SCOMManagementServer | where {$_.Name –eq $Global:FAIL2} 
	$gatewayMS1 = Get-SCOMManagementServer | where {$_.Name –eq $Global:GWDCbSELECT} 
	Set-SCOMParentManagementServer -GatewayServer: $gatewayMS1 -PrimaryServer: $primaryMS1 
	Set-SCOMParentManagementServer -GatewayServer: $gatewayMS1 -FailoverServer: $failoverMS1		
			}
			Catch{###### INSERT CATCH CODE in Here ######}
	#>
			
	$textbox9.AppendText("SET PRIMARY AND FAILOVER SERVERS for $Global:GWDCbSELECT"  + $global:NewLine + $Global:NewLine)	
		
	$textbox9.AppendText("-----------------------------------------------"  + $global:NewLine + $global:NewLine)
	### VERIFY PRIM and FAILOVER ####
	$textbox9.AppendText("VERIFYING PRIMARY AND FAILOVER SERVERS for $Global:GWDCbSELECT"  + $global:NewLine + $Global:NewLine)			
	$textbox9.AppendText("-----------------------------------------------"  + $global:NewLine)	
	
	
	$GWA=Get-SCOMGatewayManagementServer | where {$_.name -eq $Global:GWDCbSELECT} 
	$GWA | foreach-object { 
	$Primary1=$_.getPrimaryManagementServer() | select Name 			
	$failover1=$_.getFailoverManagementServers() | select Name	
		
	### check that these are correct ###
	If ( $Primary1 -eq $Global:PRIM1 -and $failover -eq $Global:FAIL1){
				
	$textbox9.AppendText("SUCCESSFULLY VERIFIED PRIMARY AND FAILOVER SERVERS for $Global:GWDCbSELECT"  + $global:NewLine + $Global:NewLine)	
	
	$textbox9.AppendText("PRIMARY:---" + $Primary1 + $global:NewLine)
	$textbox9.AppendText("FAILOVER:---" + $failover1 + $global:NewLine)				
			}			
	else {
	$textbox9.ForeColor="RED"			
	$textbox9.AppendText("VERIFICATION FAILED FOR PRIMARY AND FAILOVER SERVERS for $Global:GWDCbSELECT"  + $global:NewLine + $Global:NewLine)
	
	$textbox9.AppendText("PRIMARY:---" + $Primary1 + $global:NewLine)
	$textbox9.AppendText("FAILOVER:---" + $failover1 + $global:NewLine)				
					
			}	
	}
							
	}	
	
	### Set status and reset buttons ###
		
		}
	
	#### SET 4 #######
	$buttonset4_Click={}
	
	################################# SHOW AGENTS A ##################################
	$SHOWAGENTSA_Click={
		$textbox8.ForeColor="LIME"
		$checkedlistbox5.Items.Clear()
		$agents1=@()
		$SHOWAGENTSA.BackColor="RED"
		$agents1=(get-SCOMManagementServer -Name $GWDCaSELECT).GetAgentManagedComputers() | select name, computername
		$textbox8.text="Agents On Selected Gateway" + $global:NewLine
		
		If ($agents1) {
		foreach ($agent1 in $agents1) {
		$textbox8.Appendtext($agent1.name + $global:NewLine)
		$SHOWAGENTSA.BackColor="LightGreen"
		$buttonSELECT2.Enabled=$true
				
		Load-ListBox $checkedlistbox5  $agent1.computername  -append	
		}	
		}else{
		$textbox8.text="No Agents On Selected Gateway"
		$SHOWAGENTSA.BackColor="LightGreen"	
		}
			
	}
	
	################################# SHOW AGENTS B ##################################
	$SHOWAGENTSB_Click={
		$textbox9.ForeColor="LIME"
		$checkedlistbox6.Items.Clear()
		$agents2=@()
		$SHOWAGENTSB.BackColor="RED"
		$agents2=(get-SCOMManagementServer -Name $GWDCBSELECT).GetAgentManagedComputers() | select name, computername
		$textbox9.text="Agents On Selected Gateway" + $global:NewLine
		
		If ($agents2) {
		foreach ($agent2 in $agents2) {
		$textbox9.Appendtext($agent2.name + $global:NewLine)
		$SHOWAGENTSB.BackColor="LightGreen"
		$buttonSELECT4.Enabled=$true
				
		Load-ListBox $checkedlistbox6  $agent2.computername  -append			
		}	
		}else{
		$textbox9.text="No Agents On Selected Gateway"
		$SHOWAGENTSB.BackColor="LightGreen"	
		}
		
	}
	
	$checkedlistbox5_SelectedIndexChanged={}
	
	$checkedlistbox6_SelectedIndexChanged={}
	
	$buttonSHOWGWFAILOVER_Click={
		#TODO: Place custom script here
		
	}
	
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formSELECT.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$checkedlistbox6.remove_SelectedIndexChanged($checkedlistbox6_SelectedIndexChanged)
			$checkedlistbox5.remove_SelectedIndexChanged($checkedlistbox5_SelectedIndexChanged)
			$buttonSELECT4.remove_Click($buttonSELECT4_Click)
			$buttonSELECT3.remove_Click($buttonSELECT3_Click)
			$buttonSELECT2.remove_Click($buttonSELECT2_Click)
			$buttonSELECT1.remove_Click($buttonSELECT1_Click)
			$buttonEXITCONSOLE.remove_Click($buttonEXITCONSOLE_Click)
			$buttonSTARTGATEWAYSCAN.remove_Click($buttonSTARTGATEWAYSCAN_Click)
			$buttonset4.remove_Click($buttonset4_Click)
			$buttonSET2.remove_Click($buttonSET2_Click)
			$checkedlistbox3.remove_SelectedIndexChanged($checkedlistbox3_SelectedIndexChanged)
			$SHOWAGENTSB.remove_Click($SHOWAGENTSB_Click)
			$DCBGWFailover.remove_Click($DCBGWFailover_Click)
			$buttonSET3.remove_Click($buttonSET3_Click)
			$checkedlistbox1.remove_SelectedIndexChanged($checkedlistbox1_SelectedIndexChanged)
			$buttonSET1.remove_Click($buttonSET1_Click)
			$SHOWAGENTSA.remove_Click($SHOWAGENTSA_Click)
			$DCAGWFailover.remove_Click($DCAGWFailover_Click)
			$listbox2.remove_SelectedIndexChanged($listbox2_SelectedIndexChanged)
			$listbox1.remove_SelectedIndexChanged($listbox1_SelectedIndexChanged)
			$formSELECT.remove_Load($formSELECT_Load)
			$formSELECT.remove_Load($Form_StateCorrection_Load)
			$formSELECT.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formSELECT.SuspendLayout()
	#
	# formSELECT
	#
	$formSELECT.Controls.Add($label7)
	$formSELECT.Controls.Add($textbox10)
	$formSELECT.Controls.Add($button1)
	$formSELECT.Controls.Add($buttonSHOWAGENTS)
	$formSELECT.Controls.Add($buttonSHOWGWFAILOVER)
	$formSELECT.Controls.Add($labelDataCenter3)
	$formSELECT.Controls.Add($listbox3)
	$formSELECT.Controls.Add($progressbaroverlay1)
	$formSELECT.Controls.Add($SETALLB)
	$formSELECT.Controls.Add($SETALLA)
	$formSELECT.Controls.Add($labelAGENTS)
	$formSELECT.Controls.Add($checkedlistbox6)
	$formSELECT.Controls.Add($checkedlistbox5)
	$formSELECT.Controls.Add($buttonSELECT4)
	$formSELECT.Controls.Add($buttonSELECT3)
	$formSELECT.Controls.Add($buttonSELECT2)
	$formSELECT.Controls.Add($buttonSELECT1)
	$formSELECT.Controls.Add($textbox9)
	$formSELECT.Controls.Add($textbox8)
	$formSELECT.Controls.Add($label5)
	$formSELECT.Controls.Add($label4)
	$formSELECT.Controls.Add($label3)
	$formSELECT.Controls.Add($label2)
	$formSELECT.Controls.Add($label1)
	$formSELECT.Controls.Add($labelSELECTED)
	$formSELECT.Controls.Add($labelGATEWAYAndAGENTSTATU)
	$formSELECT.Controls.Add($STATUS)
	$formSELECT.Controls.Add($textbox7)
	$formSELECT.Controls.Add($textbox6)
	$formSELECT.Controls.Add($textbox5)
	$formSELECT.Controls.Add($textbox4)
	$formSELECT.Controls.Add($textbox3)
	$formSELECT.Controls.Add($textbox2)
	$formSELECT.Controls.Add($textbox1)
	$formSELECT.Controls.Add($buttonEXITCONSOLE)
	$formSELECT.Controls.Add($buttonSTARTGATEWAYSCAN)
	$formSELECT.Controls.Add($labelSCRIPTOUTPUT)
	$formSELECT.Controls.Add($buttonset4)
	$formSELECT.Controls.Add($checkedlistbox4)
	$formSELECT.Controls.Add($buttonSET2)
	$formSELECT.Controls.Add($checkedlistbox3)
	$formSELECT.Controls.Add($labelSETAGENTFAILOVER)
	$formSELECT.Controls.Add($buttonCHECKAGENTFAILOVER)
	$formSELECT.Controls.Add($SHOWAGENTSB)
	$formSELECT.Controls.Add($DCBGWFailover)
	$formSELECT.Controls.Add($labelSETGWFAILOVER)
	$formSELECT.Controls.Add($SHOWAGENTSFAILOVER)
	$formSELECT.Controls.Add($labelDTEKSCOMGATEWAYMANAG)
	$formSELECT.Controls.Add($buttonSET3)
	$formSELECT.Controls.Add($checkedlistbox2)
	$formSELECT.Controls.Add($checkedlistbox1)
	$formSELECT.Controls.Add($buttonSET1)
	$formSELECT.Controls.Add($SHOWAGENTSA)
	$formSELECT.Controls.Add($DCAGWFailover)
	$formSELECT.Controls.Add($labelDataCenter2)
	$formSELECT.Controls.Add($labelDatacenter1)
	$formSELECT.Controls.Add($listbox2)
	$formSELECT.Controls.Add($listbox1)
	$formSELECT.Controls.Add($picturebox1)
	$formSELECT.AutoScaleDimensions = '6, 13'
	$formSELECT.AutoScaleMode = 'Font'
	$formSELECT.ClientSize = '1333, 795'
	$formSELECT.Name = 'formSELECT'
	$formSELECT.Text = 'SELECT'
	$formSELECT.add_Load($formSELECT_Load)
	#
	# label7
	#
	$label7.Font = 'Tahoma, 8.25pt, style=Bold'
	$label7.Location = '25, 638'
	$label7.Name = 'label7'
	$label7.Size = '82, 12'
	$label7.TabIndex = 63
	$label7.Text = 'SELECTED'
	$label7.UseCompatibleTextRendering = $True
	#
	# textbox10
	#
	$textbox10.BackColor = 'GradientActiveCaption'
	$textbox10.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox10.Location = '25, 653'
	$textbox10.Name = 'textbox10'
	$textbox10.Size = '205, 21'
	$textbox10.TabIndex = 62
	#
	# button1
	#
	$button1.Enabled = $False
	$button1.Font = 'Tahoma, 8.25pt, style=Bold'
	$button1.Location = '251, 599'
	$button1.Name = 'button1'
	$button1.Size = '151, 36'
	$button1.TabIndex = 61
	$button1.Text = 'CHECK AGENT FAILOVER'
	$button1.UseCompatibleTextRendering = $True
	$button1.UseVisualStyleBackColor = $True
	#
	# buttonSHOWAGENTS
	#
	$buttonSHOWAGENTS.Enabled = $False
	$buttonSHOWAGENTS.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSHOWAGENTS.Location = '251, 557'
	$buttonSHOWAGENTS.Name = 'buttonSHOWAGENTS'
	$buttonSHOWAGENTS.Size = '151, 36'
	$buttonSHOWAGENTS.TabIndex = 60
	$buttonSHOWAGENTS.Text = 'SHOW AGENTS '
	$buttonSHOWAGENTS.UseCompatibleTextRendering = $True
	$buttonSHOWAGENTS.UseVisualStyleBackColor = $True
	#
	# buttonSHOWGWFAILOVER
	#
	$buttonSHOWGWFAILOVER.Enabled = $False
	$buttonSHOWGWFAILOVER.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSHOWGWFAILOVER.Location = '251, 514'
	$buttonSHOWGWFAILOVER.Name = 'buttonSHOWGWFAILOVER'
	$buttonSHOWGWFAILOVER.Size = '151, 36'
	$buttonSHOWGWFAILOVER.TabIndex = 59
	$buttonSHOWGWFAILOVER.Text = 'SHOW GW FAILOVER'
	$buttonSHOWGWFAILOVER.UseCompatibleTextRendering = $True
	$buttonSHOWGWFAILOVER.UseVisualStyleBackColor = $True
	#
	# labelDataCenter3
	#
	$labelDataCenter3.Font = 'Tahoma, 8.25pt, style=Bold'
	$labelDataCenter3.Location = '25, 497'
	$labelDataCenter3.Name = 'labelDataCenter3'
	$labelDataCenter3.Size = '100, 14'
	$labelDataCenter3.TabIndex = 58
	$labelDataCenter3.Text = 'DataCenter3'
	$labelDataCenter3.UseCompatibleTextRendering = $True
	#
	# listbox3
	#
	$listbox3.BackColor = 'GradientActiveCaption'
	$listbox3.Font = 'Tahoma, 8.25pt, style=Bold'
	$listbox3.FormattingEnabled = $True
	$listbox3.Location = '25, 514'
	$listbox3.Name = 'listbox3'
	$listbox3.Size = '205, 121'
	$listbox3.TabIndex = 57
	#
	# progressbaroverlay1
	#
	$progressbaroverlay1.Location = '781, 60'
	$progressbaroverlay1.Name = 'progressbaroverlay1'
	$progressbaroverlay1.Size = '325, 23'
	$progressbaroverlay1.TabIndex = 56
	#
	# SETALLB
	#
	$SETALLB.Font = 'Tahoma, 8.25pt, style=Bold'
	$SETALLB.Location = '1218, 644'
	$SETALLB.Name = 'SETALLB'
	$SETALLB.Size = '62, 36'
	$SETALLB.TabIndex = 55
	$SETALLB.Text = 'SET ALL'
	$SETALLB.UseCompatibleTextRendering = $True
	$SETALLB.UseVisualStyleBackColor = $True
	#
	# SETALLA
	#
	$SETALLA.Font = 'Tahoma, 8.25pt, style=Bold'
	$SETALLA.Location = '1218, 373'
	$SETALLA.Name = 'SETALLA'
	$SETALLA.Size = '62, 36'
	$SETALLA.TabIndex = 54
	$SETALLA.Text = 'SET ALL'
	$SETALLA.UseCompatibleTextRendering = $True
	$SETALLA.UseVisualStyleBackColor = $True
	#
	# labelAGENTS
	#
	$labelAGENTS.Font = 'Tahoma, 8.25pt, style=Bold'
	$labelAGENTS.Location = '988, 130'
	$labelAGENTS.Name = 'labelAGENTS'
	$labelAGENTS.Size = '129, 23'
	$labelAGENTS.TabIndex = 53
	$labelAGENTS.Text = 'AGENTS '
	$labelAGENTS.UseCompatibleTextRendering = $True
	#
	# checkedlistbox6
	#
	$checkedlistbox6.FormattingEnabled = $True
	$checkedlistbox6.HorizontalScrollbar = $True
	$checkedlistbox6.Location = '949, 425'
	$checkedlistbox6.Name = 'checkedlistbox6'
	$checkedlistbox6.Size = '168, 259'
	$checkedlistbox6.TabIndex = 52
	$checkedlistbox6.UseCompatibleTextRendering = $True
	$checkedlistbox6.add_SelectedIndexChanged($checkedlistbox6_SelectedIndexChanged)
	#
	# checkedlistbox5
	#
	$checkedlistbox5.FormattingEnabled = $True
	$checkedlistbox5.HorizontalScrollbar = $True
	$checkedlistbox5.Location = '949, 154'
	$checkedlistbox5.Name = 'checkedlistbox5'
	$checkedlistbox5.Size = '168, 259'
	$checkedlistbox5.TabIndex = 51
	$checkedlistbox5.UseCompatibleTextRendering = $True
	$checkedlistbox5.add_SelectedIndexChanged($checkedlistbox5_SelectedIndexChanged)
	#
	# buttonSELECT4
	#
	$buttonSELECT4.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSELECT4.Location = '1133, 549'
	$buttonSELECT4.Name = 'buttonSELECT4'
	$buttonSELECT4.Size = '172, 23'
	$buttonSELECT4.TabIndex = 50
	$buttonSELECT4.Text = 'SELECT'
	$buttonSELECT4.UseCompatibleTextRendering = $True
	$buttonSELECT4.UseVisualStyleBackColor = $True
	$buttonSELECT4.add_Click($buttonSELECT4_Click)
	#
	# buttonSELECT3
	#
	$buttonSELECT3.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSELECT3.Location = '792, 549'
	$buttonSELECT3.Name = 'buttonSELECT3'
	$buttonSELECT3.Size = '129, 23'
	$buttonSELECT3.TabIndex = 49
	$buttonSELECT3.Text = 'SELECT'
	$buttonSELECT3.UseCompatibleTextRendering = $True
	$buttonSELECT3.UseVisualStyleBackColor = $True
	$buttonSELECT3.add_Click($buttonSELECT3_Click)
	#
	# buttonSELECT2
	#
	$buttonSELECT2.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSELECT2.Location = '1133, 275'
	$buttonSELECT2.Name = 'buttonSELECT2'
	$buttonSELECT2.Size = '172, 23'
	$buttonSELECT2.TabIndex = 48
	$buttonSELECT2.Text = 'SELECT'
	$buttonSELECT2.UseCompatibleTextRendering = $True
	$buttonSELECT2.UseVisualStyleBackColor = $True
	$buttonSELECT2.add_Click($buttonSELECT2_Click)
	#
	# buttonSELECT1
	#
	$buttonSELECT1.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSELECT1.Location = '792, 275'
	$buttonSELECT1.Name = 'buttonSELECT1'
	$buttonSELECT1.Size = '129, 23'
	$buttonSELECT1.TabIndex = 47
	$buttonSELECT1.Text = 'SELECT'
	$buttonSELECT1.UseCompatibleTextRendering = $True
	$buttonSELECT1.UseVisualStyleBackColor = $True
	$buttonSELECT1.add_Click($buttonSELECT1_Click)
	#
	# textbox9
	#
	$textbox9.BackColor = '0, 0, 192'
	$textbox9.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox9.ForeColor = 'Lime'
	$textbox9.Location = '427, 397'
	$textbox9.Multiline = $True
	$textbox9.Name = 'textbox9'
	$textbox9.ReadOnly = $True
	$textbox9.ScrollBars = 'Vertical'
	$textbox9.Size = '336, 254'
	$textbox9.TabIndex = 46
	#
	# textbox8
	#
	$textbox8.BackColor = '0, 0, 192'
	$textbox8.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox8.ForeColor = 'Lime'
	$textbox8.Location = '427, 130'
	$textbox8.Multiline = $True
	$textbox8.Name = 'textbox8'
	$textbox8.ReadOnly = $True
	$textbox8.ScrollBars = 'Vertical'
	$textbox8.Size = '336, 256'
	$textbox8.TabIndex = 45
	#
	# label5
	#
	$label5.Font = 'Tahoma, 8.25pt, style=Bold'
	$label5.Location = '1133, 575'
	$label5.Name = 'label5'
	$label5.Size = '82, 12'
	$label5.TabIndex = 44
	$label5.Text = 'SELECTED'
	$label5.UseCompatibleTextRendering = $True
	#
	# label4
	#
	$label4.Font = 'Tahoma, 8.25pt, style=Bold'
	$label4.Location = '792, 575'
	$label4.Name = 'label4'
	$label4.Size = '82, 12'
	$label4.TabIndex = 43
	$label4.Text = 'SELECTED'
	$label4.UseCompatibleTextRendering = $True
	#
	# label3
	#
	$label3.Font = 'Tahoma, 8.25pt, style=Bold'
	$label3.Location = '1133, 304'
	$label3.Name = 'label3'
	$label3.Size = '82, 12'
	$label3.TabIndex = 42
	$label3.Text = 'SELECTED'
	$label3.UseCompatibleTextRendering = $True
	#
	# label2
	#
	$label2.Font = 'Tahoma, 8.25pt, style=Bold'
	$label2.Location = '792, 304'
	$label2.Name = 'label2'
	$label2.Size = '82, 12'
	$label2.TabIndex = 41
	$label2.Text = 'SELECTED'
	$label2.UseCompatibleTextRendering = $True
	#
	# label1
	#
	$label1.Font = 'Tahoma, 8.25pt, style=Bold'
	$label1.Location = '25, 445'
	$label1.Name = 'label1'
	$label1.Size = '82, 12'
	$label1.TabIndex = 40
	$label1.Text = 'SELECTED'
	$label1.UseCompatibleTextRendering = $True
	#
	# labelSELECTED
	#
	$labelSELECTED.Font = 'Tahoma, 8.25pt, style=Bold'
	$labelSELECTED.Location = '25, 255'
	$labelSELECTED.Name = 'labelSELECTED'
	$labelSELECTED.Size = '82, 12'
	$labelSELECTED.TabIndex = 39
	$labelSELECTED.Text = 'SELECTED'
	$labelSELECTED.UseCompatibleTextRendering = $True
	#
	# labelGATEWAYAndAGENTSTATU
	#
	$labelGATEWAYAndAGENTSTATU.Font = 'Tahoma, 9.75pt, style=Bold'
	$labelGATEWAYAndAGENTSTATU.Location = '493, 663'
	$labelGATEWAYAndAGENTSTATU.Name = 'labelGATEWAYAndAGENTSTATU'
	$labelGATEWAYAndAGENTSTATU.Size = '249, 18'
	$labelGATEWAYAndAGENTSTATU.TabIndex = 38
	$labelGATEWAYAndAGENTSTATU.Text = 'GATEWAY and AGENT STATUS
'
	$labelGATEWAYAndAGENTSTATU.UseCompatibleTextRendering = $True
	#
	# STATUS
	#
	$STATUS.BackColor = 'Lime'
	$STATUS.BorderStyle = 'FixedSingle'
	$STATUS.Font = 'Arial Rounded MT Bold, 12pt, style=Bold'
	$STATUS.Location = '493, 684'
	$STATUS.Name = 'STATUS'
	$STATUS.Size = '191, 48'
	$STATUS.TabIndex = 37
	#
	# textbox7
	#
	$textbox7.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox7.Location = '1133, 593'
	$textbox7.Multiline = $True
	$textbox7.Name = 'textbox7'
	$textbox7.Size = '172, 45'
	$textbox7.TabIndex = 36
	#
	# textbox6
	#
	$textbox6.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox6.Location = '792, 593'
	$textbox6.Multiline = $True
	$textbox6.Name = 'textbox6'
	$textbox6.Size = '129, 45'
	$textbox6.TabIndex = 35
	#
	# textbox5
	#
	$textbox5.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox5.Location = '1133, 321'
	$textbox5.Multiline = $True
	$textbox5.Name = 'textbox5'
	$textbox5.Size = '172, 45'
	$textbox5.TabIndex = 34
	#
	# textbox4
	#
	$textbox4.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox4.Location = '792, 321'
	$textbox4.Multiline = $True
	$textbox4.Name = 'textbox4'
	$textbox4.Size = '129, 45'
	$textbox4.TabIndex = 33
	#
	# textbox3
	#
	$textbox3.BackColor = 'GradientActiveCaption'
	$textbox3.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox3.Location = '25, 460'
	$textbox3.Name = 'textbox3'
	$textbox3.Size = '205, 21'
	$textbox3.TabIndex = 32
	#
	# textbox2
	#
	$textbox2.BackColor = 'GradientActiveCaption'
	$textbox2.Font = 'Tahoma, 8.25pt, style=Bold'
	$textbox2.Location = '25, 270'
	$textbox2.Name = 'textbox2'
	$textbox2.Size = '205, 21'
	$textbox2.TabIndex = 31
	#
	# textbox1
	#
	$textbox1.BackColor = '0, 0, 192'
	$textbox1.ForeColor = 'Lime'
	$textbox1.Location = '25, 702'
	$textbox1.Multiline = $True
	$textbox1.Name = 'textbox1'
	$textbox1.ReadOnly = $True
	$textbox1.ScrollBars = 'Both'
	$textbox1.Size = '377, 85'
	$textbox1.TabIndex = 30
	#
	# buttonEXITCONSOLE
	#
	$buttonEXITCONSOLE.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonEXITCONSOLE.Location = '1106, 702'
	$buttonEXITCONSOLE.Name = 'buttonEXITCONSOLE'
	$buttonEXITCONSOLE.Size = '199, 53'
	$buttonEXITCONSOLE.TabIndex = 29
	$buttonEXITCONSOLE.Text = 'EXIT CONSOLE'
	$buttonEXITCONSOLE.UseCompatibleTextRendering = $True
	$buttonEXITCONSOLE.UseVisualStyleBackColor = $True
	$buttonEXITCONSOLE.add_Click($buttonEXITCONSOLE_Click)
	#
	# buttonSTARTGATEWAYSCAN
	#
	$buttonSTARTGATEWAYSCAN.Font = 'Arial, 8.25pt, style=Bold'
	$buttonSTARTGATEWAYSCAN.Location = '427, 43'
	$buttonSTARTGATEWAYSCAN.Name = 'buttonSTARTGATEWAYSCAN'
	$buttonSTARTGATEWAYSCAN.Size = '336, 53'
	$buttonSTARTGATEWAYSCAN.TabIndex = 28
	$buttonSTARTGATEWAYSCAN.Text = 'START GATEWAY SCAN'
	$buttonSTARTGATEWAYSCAN.UseCompatibleTextRendering = $True
	$buttonSTARTGATEWAYSCAN.UseVisualStyleBackColor = $True
	$buttonSTARTGATEWAYSCAN.add_Click($buttonSTARTGATEWAYSCAN_Click)
	#
	# labelSCRIPTOUTPUT
	#
	$labelSCRIPTOUTPUT.Font = 'Tahoma, 8.25pt, style=Bold'
	$labelSCRIPTOUTPUT.Location = '25, 684'
	$labelSCRIPTOUTPUT.Name = 'labelSCRIPTOUTPUT'
	$labelSCRIPTOUTPUT.Size = '100, 12'
	$labelSCRIPTOUTPUT.TabIndex = 27
	$labelSCRIPTOUTPUT.Text = 'SCRIPT OUTPUT'
	$labelSCRIPTOUTPUT.UseCompatibleTextRendering = $True
	#
	# buttonset4
	#
	$buttonset4.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonset4.Location = '1133, 644'
	$buttonset4.Name = 'buttonset4'
	$buttonset4.Size = '62, 36'
	$buttonset4.TabIndex = 25
	$buttonset4.Text = 'SET'
	$buttonset4.UseCompatibleTextRendering = $True
	$buttonset4.UseVisualStyleBackColor = $True
	$buttonset4.add_Click($buttonset4_Click)
	#
	# checkedlistbox4
	#
	$checkedlistbox4.FormattingEnabled = $True
	$checkedlistbox4.Location = '1133, 425'
	$checkedlistbox4.Name = 'checkedlistbox4'
	$checkedlistbox4.Size = '172, 109'
	$checkedlistbox4.TabIndex = 24
	$checkedlistbox4.UseCompatibleTextRendering = $True
	#
	# buttonSET2
	#
	$buttonSET2.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSET2.Location = '1133, 373'
	$buttonSET2.Name = 'buttonSET2'
	$buttonSET2.Size = '62, 36'
	$buttonSET2.TabIndex = 23
	$buttonSET2.Text = 'SET '
	$buttonSET2.UseCompatibleTextRendering = $True
	$buttonSET2.UseVisualStyleBackColor = $True
	$buttonSET2.add_Click($buttonSET2_Click)
	#
	# checkedlistbox3
	#
	$checkedlistbox3.FormattingEnabled = $True
	$checkedlistbox3.Location = '1133, 154'
	$checkedlistbox3.Name = 'checkedlistbox3'
	$checkedlistbox3.Size = '172, 109'
	$checkedlistbox3.TabIndex = 22
	$checkedlistbox3.UseCompatibleTextRendering = $True
	$checkedlistbox3.add_SelectedIndexChanged($checkedlistbox3_SelectedIndexChanged)
	#
	# labelSETAGENTFAILOVER
	#
	$labelSETAGENTFAILOVER.Font = 'Tahoma, 8.25pt, style=Bold'
	$labelSETAGENTFAILOVER.Location = '1133, 128'
	$labelSETAGENTFAILOVER.Name = 'labelSETAGENTFAILOVER'
	$labelSETAGENTFAILOVER.Size = '129, 23'
	$labelSETAGENTFAILOVER.TabIndex = 21
	$labelSETAGENTFAILOVER.Text = 'SET AGENT FAILOVER'
	$labelSETAGENTFAILOVER.UseCompatibleTextRendering = $True
	#
	# buttonCHECKAGENTFAILOVER
	#
	$buttonCHECKAGENTFAILOVER.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonCHECKAGENTFAILOVER.Location = '251, 406'
	$buttonCHECKAGENTFAILOVER.Name = 'buttonCHECKAGENTFAILOVER'
	$buttonCHECKAGENTFAILOVER.Size = '151, 36'
	$buttonCHECKAGENTFAILOVER.TabIndex = 20
	$buttonCHECKAGENTFAILOVER.Text = 'CHECK AGENT FAILOVER'
	$buttonCHECKAGENTFAILOVER.UseCompatibleTextRendering = $True
	$buttonCHECKAGENTFAILOVER.UseVisualStyleBackColor = $True
	#
	# SHOWAGENTSB
	#
	$SHOWAGENTSB.Font = 'Tahoma, 8.25pt, style=Bold'
	$SHOWAGENTSB.Location = '251, 363'
	$SHOWAGENTSB.Name = 'SHOWAGENTSB'
	$SHOWAGENTSB.Size = '151, 36'
	$SHOWAGENTSB.TabIndex = 19
	$SHOWAGENTSB.Text = 'SHOW AGENTS '
	$SHOWAGENTSB.UseCompatibleTextRendering = $True
	$SHOWAGENTSB.UseVisualStyleBackColor = $True
	$SHOWAGENTSB.add_Click($SHOWAGENTSB_Click)
	#
	# DCBGWFailover
	#
	$DCBGWFailover.Font = 'Tahoma, 8.25pt, style=Bold'
	$DCBGWFailover.Location = '251, 321'
	$DCBGWFailover.Name = 'DCBGWFailover'
	$DCBGWFailover.Size = '151, 36'
	$DCBGWFailover.TabIndex = 18
	$DCBGWFailover.Text = 'SHOW GW FAILOVER'
	$DCBGWFailover.UseCompatibleTextRendering = $True
	$DCBGWFailover.UseVisualStyleBackColor = $True
	$DCBGWFailover.add_Click($DCBGWFailover_Click)
	#
	# labelSETGWFAILOVER
	#
	$labelSETGWFAILOVER.Font = 'Tahoma, 8.25pt, style=Bold'
	$labelSETGWFAILOVER.Location = '792, 128'
	$labelSETGWFAILOVER.Name = 'labelSETGWFAILOVER'
	$labelSETGWFAILOVER.Size = '129, 23'
	$labelSETGWFAILOVER.TabIndex = 17
	$labelSETGWFAILOVER.Text = 'SET GW FAILOVER'
	$labelSETGWFAILOVER.UseCompatibleTextRendering = $True
	#
	# SHOWAGENTSFAILOVER
	#
	$SHOWAGENTSFAILOVER.Font = 'Tahoma, 8.25pt, style=Bold'
	$SHOWAGENTSFAILOVER.Location = '251, 215'
	$SHOWAGENTSFAILOVER.Name = 'SHOWAGENTSFAILOVER'
	$SHOWAGENTSFAILOVER.Size = '151, 36'
	$SHOWAGENTSFAILOVER.TabIndex = 16
	$SHOWAGENTSFAILOVER.Text = 'CHECK AGENT FAILOVER '
	$SHOWAGENTSFAILOVER.UseCompatibleTextRendering = $True
	$SHOWAGENTSFAILOVER.UseVisualStyleBackColor = $True
	#
	# labelDTEKSCOMGATEWAYMANAG
	#
	$labelDTEKSCOMGATEWAYMANAG.Font = 'Arial, 18pt, style=Bold'
	$labelDTEKSCOMGATEWAYMANAG.Location = '153, 9'
	$labelDTEKSCOMGATEWAYMANAG.Name = 'labelDTEKSCOMGATEWAYMANAG'
	$labelDTEKSCOMGATEWAYMANAG.Size = '644, 31'
	$labelDTEKSCOMGATEWAYMANAG.TabIndex = 15
	$labelDTEKSCOMGATEWAYMANAG.Text = 'DTEK SCOM GATEWAY MANAGEMENT TOOL V2.1.0'
	$labelDTEKSCOMGATEWAYMANAG.UseCompatibleTextRendering = $True
	#
	# buttonSET3
	#
	$buttonSET3.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSET3.Location = '792, 644'
	$buttonSET3.Name = 'buttonSET3'
	$buttonSET3.Size = '129, 36'
	$buttonSET3.TabIndex = 14
	$buttonSET3.Text = 'SET'
	$buttonSET3.UseCompatibleTextRendering = $True
	$buttonSET3.UseVisualStyleBackColor = $True
	$buttonSET3.add_Click($buttonSET3_Click)
	#
	# checkedlistbox2
	#
	$checkedlistbox2.FormattingEnabled = $True
	$checkedlistbox2.Location = '792, 425'
	$checkedlistbox2.Name = 'checkedlistbox2'
	$checkedlistbox2.Size = '129, 109'
	$checkedlistbox2.TabIndex = 13
	$checkedlistbox2.UseCompatibleTextRendering = $True
	#
	# checkedlistbox1
	#
	$checkedlistbox1.FormattingEnabled = $True
	$checkedlistbox1.Location = '792, 154'
	$checkedlistbox1.Name = 'checkedlistbox1'
	$checkedlistbox1.Size = '129, 109'
	$checkedlistbox1.TabIndex = 10
	$checkedlistbox1.UseCompatibleTextRendering = $True
	$checkedlistbox1.add_SelectedIndexChanged($checkedlistbox1_SelectedIndexChanged)
	#
	# buttonSET1
	#
	$buttonSET1.Font = 'Tahoma, 8.25pt, style=Bold'
	$buttonSET1.Location = '792, 373'
	$buttonSET1.Name = 'buttonSET1'
	$buttonSET1.Size = '129, 36'
	$buttonSET1.TabIndex = 9
	$buttonSET1.Text = 'SET'
	$buttonSET1.UseCompatibleTextRendering = $True
	$buttonSET1.UseVisualStyleBackColor = $True
	$buttonSET1.add_Click($buttonSET1_Click)
	#
	# SHOWAGENTSA
	#
	$SHOWAGENTSA.Font = 'Tahoma, 8.25pt, style=Bold'
	$SHOWAGENTSA.Location = '251, 173'
	$SHOWAGENTSA.Name = 'SHOWAGENTSA'
	$SHOWAGENTSA.Size = '151, 36'
	$SHOWAGENTSA.TabIndex = 8
	$SHOWAGENTSA.Text = 'SHOW AGENTS '
	$SHOWAGENTSA.UseCompatibleTextRendering = $True
	$SHOWAGENTSA.UseVisualStyleBackColor = $True
	$SHOWAGENTSA.add_Click($SHOWAGENTSA_Click)
	#
	# DCAGWFailover
	#
	$DCAGWFailover.Font = 'Tahoma, 8.25pt, style=Bold'
	$DCAGWFailover.Location = '251, 131'
	$DCAGWFailover.Name = 'DCAGWFailover'
	$DCAGWFailover.Size = '151, 36'
	$DCAGWFailover.TabIndex = 7
	$DCAGWFailover.Text = 'SHOW GW FAILOVER'
	$DCAGWFailover.UseCompatibleTextRendering = $True
	$DCAGWFailover.UseVisualStyleBackColor = $True
	$DCAGWFailover.add_Click($DCAGWFailover_Click)
	#
	# labelDataCenter2
	#
	$labelDataCenter2.Font = 'Tahoma, 8.25pt, style=Bold'
	$labelDataCenter2.Location = '25, 304'
	$labelDataCenter2.Name = 'labelDataCenter2'
	$labelDataCenter2.Size = '100, 14'
	$labelDataCenter2.TabIndex = 6
	$labelDataCenter2.Text = 'DataCenter2'
	$labelDataCenter2.UseCompatibleTextRendering = $True
	#
	# labelDatacenter1
	#
	$labelDatacenter1.Font = 'Tahoma, 8.25pt, style=Bold'
	$labelDatacenter1.Location = '25, 112'
	$labelDatacenter1.Name = 'labelDatacenter1'
	$labelDatacenter1.Size = '100, 16'
	$labelDatacenter1.TabIndex = 5
	$labelDatacenter1.Text = 'Datacenter 1'
	$labelDatacenter1.UseCompatibleTextRendering = $True
	#
	# listbox2
	#
	$listbox2.BackColor = 'GradientActiveCaption'
	$listbox2.Font = 'Tahoma, 8.25pt, style=Bold'
	$listbox2.FormattingEnabled = $True
	$listbox2.Location = '25, 131'
	$listbox2.Name = 'listbox2'
	$listbox2.Size = '205, 121'
	$listbox2.TabIndex = 2
	$listbox2.add_SelectedIndexChanged($listbox2_SelectedIndexChanged)
	#
	# listbox1
	#
	$listbox1.BackColor = 'GradientActiveCaption'
	$listbox1.Font = 'Tahoma, 8.25pt, style=Bold'
	$listbox1.FormattingEnabled = $True
	$listbox1.Location = '25, 321'
	$listbox1.Name = 'listbox1'
	$listbox1.Size = '205, 121'
	$listbox1.TabIndex = 1
	$listbox1.add_SelectedIndexChanged($listbox1_SelectedIndexChanged)
	#
	# picturebox1
	#
	#region Binary Data
	$picturebox1.Image = [System.Convert]::FromBase64String('
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')
	#endregion
	$picturebox1.Location = '12, 6'
	$picturebox1.Name = 'picturebox1'
	$picturebox1.Size = '135, 103'
	$picturebox1.TabIndex = 0
	$picturebox1.TabStop = $False
	$formSELECT.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formSELECT.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formSELECT.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formSELECT.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formSELECT.ShowDialog()

} #End Function

#Call OnApplicationLoad to initialize
if((OnApplicationLoad) -eq $true)
{
	#Call the form
	Show-MASTER_GW-MS_config_psf | Out-Null
	#Perform cleanup
	OnApplicationExit
}
